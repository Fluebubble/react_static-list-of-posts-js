{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","props","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","prepearedPosts","postsFromServer","usersFromServer","find","userId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAAaA,EAAc,SAACC,GAC1B,MAA8BA,EAAMC,QAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,EAAc,SAACP,GAC1B,IAAQQ,EAAaR,EAAbQ,SAER,OACE,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQS,UCTVC,G,MAAW,SAACX,GACvB,MAAwBA,EAAMY,KAAtBT,EAAR,EAAQA,MAAOD,EAAf,EAAeA,KAEf,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHMW,G,MAAW,SAACb,GACvB,MAKIA,EAAMc,KAJRC,EADF,EACEA,MACAX,EAFF,EAEEA,KACAI,EAHF,EAGEA,SACAI,EAJF,EAIEA,KAGF,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,2CAGE,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAEEI,EAASQ,OAAS,EACd,cAAC,EAAD,CAAaR,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,kCC9BCS,EAAW,SAACjB,GACvB,IAAQkB,EAAUlB,EAAVkB,MAER,OACE,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCCnDS,EAAiBC,EAAgBX,KACrC,SAAAK,GAAI,kCACCA,GADD,IAEFF,KAAMS,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOI,EAAKS,UACpDf,SAAUgB,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWZ,EAAKJ,WAI9DiB,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOC,QCfrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecb4b20f.chunk.js","sourcesContent":["export const CommentInfo = (props) => {\n  const { name, email, body } = props.comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = (props) => {\n  const { comments } = props;\n\n  return (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          comment={comment}\n          key={comment.id}\n        />\n      ))}\n    </div>\n  );\n};\n","import './UserInfo.scss';\n\nexport const UserInfo = (props) => {\n  const { email, name } = props.user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = (props) => {\n  const {\n    title,\n    body,\n    comments,\n    user,\n  } = props.post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {`Posted by `}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n      {\n        comments.length > 0\n          ? <CommentList comments={comments} />\n          : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = (props) => {\n  const { posts } = props;\n\n  return (\n    <div className=\"PostList\">\n      {posts.map(post => <PostInfo post={post} key={post.id} />)}\n    </div>\n  );\n};\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nconst prepearedPosts = postsFromServer.map(\n  post => ({\n    ...post,\n    user: usersFromServer.find(user => user.id === post.userId),\n    comments: commentsFromServer.filter(comment => comment.postId === post.id),\n  }),\n);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={prepearedPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}